# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Orchestrator CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file dissert-exp-orchestrator/pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        directory: dissert-exp-orchestrator
    - name: Archive build results
      uses: actions/upload-artifact@v4
      with:
        name: build-result
        path: dissert-exp-orchestrator/target/*.jar
        retention-days: 2
        
  docker-build:

    name: Docker to ECR
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Download build results
      uses: actions/download-artifact@v4
      with:
        name: build-result
        path: dissert-exp-orchestrator/target/
    - name: Save GCF credentials to file
      env:
        GCF_CREDS: ${{ secrets.GCF_CREDS }}
      run: echo $GCF_CREDS > dissert-exp-orchestrator/gcf-creds.json
    - name: Build Docker with Maven
      env:
          AWS_ECR_IMAGE_NAME: ${{ secrets.AWS_ECR_IMAGE_NAME }}
      run: mvn exec:exec@docker-clean exec:exec@docker-build -Ddocker.image-name=$AWS_ECR_IMAGE_NAME --file dissert-exp-orchestrator/pom.xml
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
    - name: Push Docker image to ECR
      env:
        AWS_ECR_IMAGE_NAME: ${{ secrets.AWS_ECR_IMAGE_NAME }}
      run: |
        docker push $AWS_ECR_IMAGE_NAME

      
